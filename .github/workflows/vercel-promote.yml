name: vercel-promote

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/vercel-promote.yml"

jobs:
  promote:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Sanity check secrets
        run: |
          test -n "$VERCEL_TOKEN" || { echo "::error::VERCEL_TOKEN missing"; exit 1; }
          test -n "$VERCEL_PROJECT_ID" || { echo "::error::VERCEL_PROJECT_ID missing"; exit 1; }
          echo "Org: ${VERCEL_ORG_ID:-<none>}"

      - name: Find latest READY preview
        id: find
        shell: bash
        run: |
          set -euo pipefail
          headers=(-H "Authorization: Bearer $VERCEL_TOKEN")
          if [[ -n "${VERCEL_ORG_ID:-}" ]]; then
            headers+=(-H "x-vercel-team-id: $VERCEL_ORG_ID")
          fi

          url="https://api.vercel.com/v6/deployments?projectId=${VERCEL_PROJECT_ID}&state=READY&target=preview&limit=1"
          echo "GET $url"
          json="$(curl -fsSL "${headers[@]}" "$url")" || {
            echo "::group::Response"; curl -sSL -D- "${headers[@]}" "$url" -o /dev/null; echo "::endgroup::"; exit 1;
          }

          id="$(echo "$json" | jq -r '.deployments[0].uid // empty')"
          created_at="$(echo "$json" | jq -r '.deployments[0].created // empty')"
          if [[ -z "$id" ]]; then
            echo "::error::No READY preview deployment found"; exit 1;
          fi
          echo "deployment_id=$id" >> "$GITHUB_OUTPUT"
          echo "created_at=$created_at" >> "$GITHUB_OUTPUT"
          echo "Preview deployment: $id ($created_at)"

      - name: Promote to production
        shell: bash
        run: |
          set -euo pipefail
          id="${{ steps.find.outputs.deployment_id }}"
          headers=(-H "Authorization: Bearer $VERCEL_TOKEN" -H "Content-Type: application/json")
          if [[ -n "${VERCEL_ORG_ID:-}" ]]; then
            headers+=(-H "x-vercel-team-id: $VERCEL_ORG_ID")
          fi
          url="https://api.vercel.com/v13/deployments/${id}/promote"
          echo "POST $url"
          curl -fsS -X POST "$url" "${headers[@]}" --data '{"target":"production"}' | jq -r '{jobId,status,alias}'
          echo "Promote request sent."
