name: vercel-promote

on:
  workflow_dispatch:
    inputs:
      deploymentId:
        description: "Optional: deploymentId to promote; leave empty to auto-pick latest READY preview"
        required: false
        default: ""
  push:
    branches: ["main"]
    paths:
      - "app/**"
      - "pages/**"
      - "public/**"
      - "next.config.mjs"
      - "package.json"

jobs:
  promote:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Guard secrets
        run: |
          test -n "$VERCEL_TOKEN" || (echo "VERCEL_TOKEN missing" && exit 1)
          test -n "$VERCEL_PROJECT_ID" || (echo "VERCEL_PROJECT_ID missing" && exit 1)
          test -n "$VERCEL_ORG_ID" || (echo "VERCEL_ORG_ID missing" && exit 1)

      - name: Resolve deploymentId (latest READY preview if empty)
        id: resolve
        run: |
          set -e
          if [ -n "${{ github.event.inputs.deploymentId }}" ]; then
            echo "id=${{ github.event.inputs.deploymentId }}" >> $GITHUB_OUTPUT
            exit 0
          fi
          # 盡量靠 API v13；取最新 READY 的 preview
          url="https://api.vercel.com/v13/deployments?projectId=$VERCEL_PROJECT_ID&state=READY&target=preview&limit=1"
          json=$(curl -fsS -H "Authorization: Bearer $VERCEL_TOKEN" -H "x-vercel-team-id: $VERCEL_ORG_ID" "$url")
          id=$(echo "$json" | sed -n 's/.*"id":"\([a-z0-9]*\)".*/\1/p' | head -n1)
          if [ -z "$id" ]; then
            echo "Cannot resolve READY preview deployment" >&2
            exit 1
          fi
          echo "id=$id" >> $GITHUB_OUTPUT
          echo "resolved_deployment_id=$id" >> $GITHUB_STEP_SUMMARY

      - name: Promote to Production (with retry)
        run: |
          set -e
          id="${{ steps.resolve.outputs.id }}"
          code=$(curl -sS -o /tmp/promote.json -w "%{http_code}" -X POST \
            -H "Authorization: Bearer $VERCEL_TOKEN" \
            -H "x-vercel-team-id: $VERCEL_ORG_ID" \
            -H "x-vercel-project-id: $VERCEL_PROJECT_ID" \
            -H "Content-Type: application/json" \
            "https://api.vercel.com/v13/deployments/$id/promote" \
            -d '{"target":"production"}')
          echo "HTTP=$code" >> $GITHUB_STEP_SUMMARY
          cat /tmp/promote.json >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          [[ "$code" =~ ^20(0|1|4)$ ]]
