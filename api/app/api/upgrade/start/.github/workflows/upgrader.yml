name: Wuji Upgrader
on:
  workflow_dispatch:
    inputs:
      jobType:
        description: 'Upgrade job type'
        required: true
        default: 'fuceti_init'
      plan:
        description: 'Plan JSON'
        required: false
        default: '{}'

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with: { node-version: '20' }

      - name: Create module (Fuceti)
        if: ${{ github.event.inputs.jobType == 'fuceti_init' }}
        run: |
          mkdir -p app/fuceti app/api/fuceti
          cat > app/fuceti/page.tsx <<'EOF'
          export default function FucetiPage(){
            return (<div className="p-6">
              <h1 className="text-xl font-semibold">富策體（最小可用）</h1>
              <p className="opacity-80 mt-2">這是自動生成的初始頁。之後會接資料與圖表。</p>
            </div>)
          }
          EOF

          cat > app/api/fuceti/route.ts <<'EOF'
          import { NextResponse } from 'next/server'
          export async function GET(){ return NextResponse.json({ ok:true, items:[] }) }
          EOF

          # 把導航加入入口（簡單做法：如果 page.tsx 找得到「功能」清單，就插一行）
          if grep -q "功能" app/page.tsx; then
            sed -i 's/出版資訊<\\/li>/<\\/li><li><a href="\\\/fuceti">富策體<\/a><\\/li><li>出版資訊<\\/li>/g' app/page.tsx || true
          fi

      - name: Commit changes
        run: |
          git config user.name "Wuji Upgrader"
          git config user.email "upgrader@users.noreply.github.com"
          BR="upgrade/${{ github.run_id }}"
          git checkout -b "$BR"
          git add -A
          git commit -m "chore(upgrade): apply ${{ github.event.inputs.jobType }}"
          git push origin "$BR"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.commit.outputs.branch || format('upgrade/{0}', github.run_id) }}
          title: "Upgrade: ${{ github.event.inputs.jobType }}"
          body: "Auto-generated by Wuji Upgrader"
          base: ${{ env.GITHUB_BASE || 'main' }}

      - name: Auto-merge PR
        run: |
          PR_NUMBER=$(gh pr list --search "Upgrade: ${{ github.event.inputs.jobType }}" --state open --json number -q '.[0].number' || echo "")
          if [ -n "$PR_NUMBER" ]; then
            gh pr merge $PR_NUMBER --squash --auto
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
